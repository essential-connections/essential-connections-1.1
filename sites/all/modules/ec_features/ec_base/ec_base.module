<?php


/**
 * Implementation of hook_theme_registry_alter().
 */
function ec_base_theme_registry_alter(&$theme_registry) {
  $funcs = &$theme_registry['page']['preprocess functions'];
  $key = array_search('ec_base_preprocess_page', $funcs);
  unset($funcs[$key]);
  array_unshift($funcs, 'ec_base_preprocess_page');

}
/**
 * Preprocess function for the page theme hook.
 *
 */
function ec_base_preprocess_page(&$variables) {
  
  if((arg(0) == 'admin' || arg(0) == 'administer' || arg(0) == 'administration') && arg(2) != 'block'){
    $variables['show_blocks'] = FALSE;
    //unset($variables['right']);
    //$variables['layout'] = 'left';
  }
  
  // this needs to be in page.tpl.php right after <body>, no way to add it to the very top from here
  /*if (variable_get('eit_ads','1') == 1){
    $variables['header'] = ('<div id="ec_ads_top" style="text-align:center;float:top;">
       <script type="text/javascript"><!--
google_ad_client = "pub-9646714435306637";
google_ad_slot = "3219472777";
google_ad_width = 728;
google_ad_height = 90;
//-->
</script> <script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
</script>
        </div>');
  }*/

}
function ec_base_preprocess_node(&$variables) {
  if(arg(0) == 'node' && arg(1) > 0 && !arg(2)){
    if($variables['node']->field_show_auth_info['0']['value'] == 1){
      $variables['submitted'] = FALSE;
    }
  }
}
////

/**
 * Implementation of hook_footer().
 */
function ec_base_footer($main = 0) {
  
  if (variable_get('ec_footer','1') == 1){
    return '<div id="ec_logo_footer" style="background-color:#000;text-align:right;margin-top:20px;">
      <div><a href="http://www.essential-connections.com" ><img src="http://www.essential-connections.com/ec_logo_footer.png"></img></a></div>
    </div>';
  }
  
}

/**
 * Implementation of hook_help().
 */
function ec_base_help($path, $arg) {
  $output = '';

  if(!(variable_get('ec_caches_cleared','0') == '1')){
    variable_set('ec_caches_cleared','1');
	drupal_flush_all_caches();
    $revert = array(
	'ec_base' => array('user_permission','variable','menu_links','menu_custom'),
	'ec_protect_critical_users' => array('user_permission','variable'),
	'ec_user' => array('user_permission','variable'),
	'ec_permissions_lock' => array('user_permission','variable'),
	'ec_delegate_menu' => array('user_permission','variable'),
	'ec_admin_access' => array('user_permission','variable'),
	'ec_views' => array('user_permission','variable'),
	'ec_simplemenu' => array('user_permission','variable'),
	'ec_help' => array('user_permission','variable'),
	'ec_backup_migrate' => array('user_permission','variable'),
	'ec_content' => array('user_permission','variable'),
	//'ec_filefield' => array('user_permission','variable'),
	'ec_block' => array('user_permission','variable'),
	'ec_formats_filters' => array('user_permission','variable'),
	'ec_htmlpurifier' => array('user_permission','variable'),
	'ec_imagecache' => array('user_permission','variable'),
	'ec_og' => array('user_permission','variable','content'),
	'ec_messaging_notifications' => array('user_permission','variable'),
	'ec_blog' => array('content','fieldgroup','user_permission','variable'),
	'ec_poll' => array('user_permission','variable'),
	'ec_page' => array('content','fieldgroup','user_permission','variable'),
	'ec_event' => array('content','fieldgroup','user_permission','variable'),
	'ec_webform' => array('user_permission','variable'),
	'ec_imce' => array('user_permission','variable'),
	'ec_ckeditor' => array('user_permission','variable'),
	'ec_vertical_tabs' => array('user_permission','variable'),
	'ec_clickpath' => array('user_permission','variable'),
	'ec_save_edit' => array('user_permission','variable'),
	'ec_statistics' => array('user_permission','variable'),
	'ec_taxonomy' => array('user_permission','variable'),
	'ec_theme' => array('user_permission','variable'),
	'ec_theme_acquia_marina' => array('user_permission','variable'),
	'ec_theme_acquia_prosper' => array('user_permission','variable'),
	'ec_theme_cti_flex' => array('user_permission','variable'),
	'ec_theme_garland' => array('user_permission','variable'),
	'ec_theme_mix_and_match' => array('user_permission','variable'),
	'ec_theme_zeropoint' => array('user_permission','variable'),
	'ec_uc' => array('user_permission','variable','menu_links'),
	'ec_frontpage' => array('menu_links'),
    ); 
    features_revert($revert);
	watchdog('ec_base', 'caches cleared', array(), WATCHDOG_INFO,NULL);
  }
  return $output;
}

/**
 * Implementation of hook_perm().
 */
function ec_base_perm() {
  return array('access administration');
}

/**
 * Implementation of hook_menu().
 */
function ec_base_menu() {
  $items = array();

    global $user;
 
  // SITE SETTINGS
    $items['admin/settings/site_settings'] = array(
       'title' => 'Site Settings',
       'description' => 'Edit site title, slogan, footer, timezone and home page style',
       'page callback' => 'drupal_get_form',
       'page arguments' => array('ec_base_site_settings'),
       'access callback' => 'user_access',
       'access arguments' => array('administer site configuration'),
       'type' => MENU_NORMAL_ITEM,
       'weight' => 1
    );

  return $items;
}

/**
 * Implementation of hook_menu_link_alter().
 */
function ec_base_menu_link_alter(&$item, $menu) {
  //drupal_set_message('menu:<pre>'.print_r($item).'</pre>' );
  global $user;
  switch($item['link_path']) {
    case 'http://help.essential-connections.com':
	  $item['weight'] = 9999;
	  if(!($user->uid > 0)){
		$item['hidden'] = 1;
	  }
	break;
    case 'admin':
	  $item['weight'] = 999;
	break;
    case 'node/add':
	  $item['weight'] = 99;
	break;
    case 'group':
	  $item['hidden'] = 1;
	break;	
    case 'og':
	  $item['weight'] = 10;
	  if(!($user->uid > 0)){
		$item['hidden'] = 1;
	  }
	break;
    case 'content':
	  $item['weight'] = 9;
	break;
    case 'users':
	  $item['weight'] = 8;
	break;
    case 'tracker':
	  $item['hidden'] = 1;
	break;
    case 'logout':
	  $item['weight'] = -9999;
	break;
  }
}

/**
 * Implementation of hook_form_alter().
 */
function ec_base_form_alter(&$form, $form_state, $form_id) {

  $node = $form['#node'];

  // for all node edit forms
  if($form_id == $node->type."_node_form"){

    $form['body_field']['teaser_include']['#type'] = 'hidden';
		
    $form['buttons']['#prefix'] = "<div style='position:fixed;bottom:0;left:100;background: #FFFFFF;background-position: 50 10;border: 1px solid #CCCCCC;' >";
    $form['buttons']['#suffix'] = "</div>";
  }

  switch($form_id){
    case 'menu_edit_item':
      $form['menu']['link_path']['#description'] = 'The path this menu item links to. This can be an internal path such as <em>content/mypage</em> or an external URL such as <em>http://essential-connections.com</em>. Enter <em>&lt;front&gt;</em> to link to the front page.';
      break;

  }
  
}

/**
* Implementation of hook_link()
*/
function ec_base_link($type, $object, $teaser = FALSE) {
  $links = array();
  global $user;
  if ($type == 'node' && user_access('edit any '.$object->type.' content')) {
    $links['edit'] = array(
      'title' => '[edit '.$object->title.']',
      'href' => 'node/' . $object->nid . '/edit',
      'query' => '',
      'fragment' => '',
    );
  }
  return $links;
}

////

function ec_base_site_settings_submit($form, &$form_state) {

	// set variables
	variable_set('site_name', $form_state['values']['site_name']);
	variable_set('site_mail', $form_state['values']['site_mail']);
	variable_set('site_slogan', $form_state['values']['site_slogan']);
	variable_set('site_footer', $form_state['values']['site_footer']);
	variable_set('site_frontpage', $form_state['values']['site_frontpage']);
	drupal_set_message(t('The configuration options have been saved.'));
	//drupal_goto($_GET['q'], drupal_get_destination());
}

function ec_base_site_settings() {
	global $user;

	// get variables
	//global $conf;
	//foreach ($conf['node_options_page'] as $k => $v) {
	//	drupal_set_message('>'.$k.' : '.$v);
	//}

	// build form
	$form['site_name'] = array(
		'#type' => 'textfield',
		'#title' => t('Site name'),
		'#default_value' => variable_get('site_name', NULL),
		//'#size' => 70,
		'#maxlength' => 50,
		'#description' => t('The name of this website.'),
		'#required' => TRUE,
	);
        $form['site_mail'] = array(
                '#type' => 'textfield',
                '#title' => t('Site e-mail address'),
                '#default_value' => variable_get('site_mail', NULL),
                //'#size' => 70,
                '#maxlength' => 50,
                '#description' => t("The From address in automated e-mails sent during registration and new password requests, and other notifications. (Use an address ending in your site's domain to help prevent this e-mail being flagged as spam.)"),
                '#required' => TRUE,
        );
	$form['site_slogan'] = array(
		'#type' => 'textfield',
		'#title' => t('Site slogan'),
		'#default_value' => variable_get('site_slogan', NULL),
		//'#size' => 70,
		'#maxlength' => 50,
		'#description' => t('Your site`s motto, tag line, or catchphrase (displayed under the site name).'),
		//'#required' => TRUE,
	);
	$form['site_footer'] = array(
		'#type' => 'textarea',
		'#title' => t('Footer message'),
		'#default_value' => variable_get('site_footer', NULL),
		'#rows' => 5,
		'#cols' => 90,
		'#description' => t('This text will be displayed at the bottom of each page. Useful for adding a copyright notice to your pages.'),
		//'#required' => TRUE,
	);
	
	date_timezone_site_form($form);
	
	$form['site_frontpage'] = array(
		'#type' => 'radios',
		'#title' => t('Site front page'),
		'#options' => array('frontpage' => 'Show full posts','frontpage_teaser' => 'Show only teasers'),
		'#default_value' => variable_get('site_frontpage', NULL),
		//'#size' => 70,
		'#description' => t('Select whether the front page shows full posts or teasers with a "read more" link'),
		'#required' => TRUE,
	);
	
	$form['submit'] = array('#type' => 'submit', '#value' => t('Save'));

	return $form;
}






