<?php


/**
 * Implementation of hook_help().
 */
function ec_help_help($path, $arg) {
  $output = '';

  if(user_access('access help')){
    $help = ec_help_get_page_help();
    if($help['page_link']){
	  $output = l('Help for this page',$help['page_link'],array('attributes' => array('class' => 'ec-help-link')));
    }
  }
  return $output;
}

/**
 * Implementation of hook_perm().
 */
function ec_help_perm() {
  return array('access help');
}

/**
 * Implementation of hook_menu().
 */
function ec_help_menu() {
  $items = array();

     $items['help'] = array(
       'title' => 'Help',
       'page callback' => 'ec_help_view',
       'access callback' => 'user_access',
       'access arguments' => array('access help'),
       'type' => MENU_NORMAL_ITEM,
       'weight' => 66,
     );
     /*$items['help/all'] = array(
       'title' => 'General Help',
       'page callback' => 'ec_help_view',
       'access callback' => TRUE,
       'type' => MENU_NORMAL_ITEM,
       'weight' => 1
     );
     $items['help/page'] = array(
       'title' => 'Help for this page',
       //'page callback' => 'views_embed_view',
       //'page arguments' => array('add_member','page'),
       'access callback' => TRUE,
       //'access arguments' => array(1),
       'type' => MENU_NORMAL_ITEM,
       'weight' => 2
     );*/

  return $items;
}

/**
 * Implementation of hook_menu_link_alter().
 */
function ec_help_menu_link_alter(&$item, $menu) {
  //drupal_set_message('menu:<pre>'.($item['path']).'</pre>' );
  //global $user;
  if (strpos($item['link_path'], 'help') === 0) {
    $item['options']['attributes']['class'] = (($item['options']['attributes']['class'])?' ':'') . 'ec-help-link';
  }
  /*if (strpos($item['link_path'], 'logout') === 0) {
    drupal_set_message('item:'.$item['title'] );
    $item['title'] .= ' '.$user->name;
  }*/
}

/**
 * Implementation of hook_simplemenu_tree_alter().
 */
function ec_help_simplemenu_tree_alter(&$tree) {
  //drupal_set_message('<b>tree:</b><pre>'.print_r($tree, TRUE) .'</pre>');
  global $user;
  foreach($tree as $key => $item){
  if($item['link']['link_path'] == 'help'){
    //drupal_set_message('<b>help:</b><pre>'.print_r($item, TRUE) .'</pre>');
    $help = ec_help_get_page_help();
    $tree[$key]['link']['href'] = $help['url'];
    foreach($item['below'] as $key2 => $item2){
      //drupal_set_message('<b>help2:</b><pre>'.print_r($item, TRUE) .'</pre>');
      if($item2['link']['link_path'] == 'help/page'){
        $tree[$key]['below'][$key2]['link']['href'] = $help['page_link'];
      }else{
        $tree[$key]['below'][$key2]['link']['href'] = $help['url'];
      }
      if(!$help['page_link']) $tree[$key]['below'][$key2]['link']['hidden'] = TRUE;
    }
  }else if($item['link']['link_path'] == 'logout'){
    $tree[$key]['link']['title'] = 'Log out '.$user->name;
    //$tree[$key]['link']['localized_options']['attributes']['style'] = '"float:right;"';
    //drupal_set_message('<b>help:</b><pre>'.print_r($item, TRUE) .'</pre>');
  }
  }

}
function ec_help_get_page_help(){

  $args = arg();
  
  // add node type to node edit paths
  if($args[0] == 'node' && $args[1] > 0){
    $node = node_load($args[1]);
    if($args[2] == 'edit'){
      $args[3] = $node->type;
    }
  }
  
  // replace any numeric args with wildcard '*'
  foreach ($args as $key => $val){
    if(is_numeric($val)) $args[$key] = '*';
  }
  
  $path = implode("-", $args);
  $url = variable_get('ec_help_url', 'http://help.essential-connections.com');
  $feed_url = $url.'/get_help_link/'.$path;
  $rawFeed = file_get_contents($feed_url);
  if($rawFeed){
    $xml = new SimpleXmlElement($rawFeed); 
    foreach ($xml->channel->item as $item){
      $page_link = $item->link;
    }
  }
  
  $help = array();
  $help['url'] = $url;
  $help['page_link'] = $page_link;
  return $help;
}

// dummy page callback for help menu items
function ec_help_view(){
  $output = 'help';
  return $output;
}

